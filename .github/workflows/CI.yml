name: Run CI tests
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:

  test-pkg:
    name: "Test package with GAP-${{ matrix.gap-version }}"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        gap-version: [ "4.14.0", "4.15.0-beta1", "master" ]

    container:
      image: ghcr.io/stertooy/gda-image:${{ matrix.gap-version }}-slim

    steps:

      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Add custom GAP root"
        run: ln -f -s $PWD /tmp/gaproot/pkg/

      - name: "Run package tests"
        uses: gap-actions/run-pkg-tests@v3
        with:
          NO_COVERAGE: ${{ matrix.gap-version != 'master' && 'false' || '' }}
          warnings-as-errors: true
            
      - name: "Process coverage"
        uses: gap-actions/process-coverage@v2
        if: ${{ matrix.gap-version == 'master' }}

      - name: "Upload coverage"
        uses: codecov/codecov-action@v5
        if: ${{ matrix.gap-version == 'master' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-gap:
    name: "Test GAP-${{ matrix.gap-version }} with package, mode: ${{ matrix.mode }}"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        gap-version: [ "4.14.0", "4.15.0-beta1", "master" ]

    container:
      image: ghcr.io/stertooy/gda-image:${{ matrix.gap-version }}-slim

    steps:

      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Add custom GAP root"
        run: ln -f -s $PWD /tmp/gaproot/pkg/

      - name: "Run GAP tests"
        uses: stertooy/run-gap-tests@v1

  validate:
    name: "Validate manual & metadata"
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/stertooy/gda-image:master-full

    steps:

      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Add custom GAP root"
        run: ln -f -s $PWD /tmp/gaproot/pkg/

      - name: "Validate CITATION.cff"
        uses: citation-file-format/cffconvert-github-action@2.0.0
        with:
          args: "--validate"
          
      - name: "Build manual"
        uses: gap-actions/build-pkg-docs@v2

      - name: "Validate PackageInfo.g"
        shell: bash
        run: gap -c "QuitGap(ValidatePackageInfo(\"PackageInfo.g\"));"

      - name: "Upload manual"
        uses: actions/upload-artifact@v4
        with:
          name: "Manual"
          path: ./doc/manual.pdf
          if-no-files-found: error

  lint:
    name: "Lint"
    runs-on: ubuntu-latest

    steps:
    
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Setup Python"
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'

      - name: "Install gaplint"
        shell: bash
        run: pip install gaplint

      - name: "Run gaplint"
        shell: bash
        run: |
          shopt -s globstar extglob
          FILES="*.g !(doc)/**/*.g*"
          gaplint $FILES --config-file=.github/gaplint.yml
